[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lcom.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.security.cert.X509Certificate;"
},
{
  "name":"[Ljava.sql.Statement;"
},
{
  "name":"[Lreitit.Trie$Matcher;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"aleph.flow__init"
},
{
  "name":"aleph.http.core.HeaderMap"
},
{
  "name":"aleph.http.core.HttpFile"
},
{
  "name":"aleph.http.core.ILookupNettyRequest"
},
{
  "name":"aleph.http.core.ILookupNettyResponse"
},
{
  "name":"aleph.http.core.NettyRequest"
},
{
  "name":"aleph.http.core.NettyResponse"
},
{
  "name":"aleph.http.core.WebsocketClose"
},
{
  "name":"aleph.http.core.WebsocketPing"
},
{
  "name":"aleph.http.core__init"
},
{
  "name":"aleph.http.server__init"
},
{
  "name":"aleph.netty.AlephServer"
},
{
  "name":"aleph.netty.ChannelSink"
},
{
  "name":"aleph.netty__init"
},
{
  "name":"bank.core__init"
},
{
  "name":"bank.core_async.domain__init"
},
{
  "name":"bank.core_async.macros__init"
},
{
  "name":"bank.core_async.middleware__init"
},
{
  "name":"bank.db__init"
},
{
  "name":"bank.domain.Bank"
},
{
  "name":"bank.domain__init"
},
{
  "name":"bank.handlers__init"
},
{
  "name":"bank.manifold.domain__init"
},
{
  "name":"bank.manifold.middleware__init"
},
{
  "name":"bank.routes__init"
},
{
  "name":"camel_snake_kebab.core__init"
},
{
  "name":"camel_snake_kebab.internals.alter_name.AlterName"
},
{
  "name":"camel_snake_kebab.internals.alter_name__init"
},
{
  "name":"camel_snake_kebab.internals.macros__init"
},
{
  "name":"camel_snake_kebab.internals.misc__init"
},
{
  "name":"camel_snake_kebab.internals.string_separator.StringSeparator"
},
{
  "name":"camel_snake_kebab.internals.string_separator__init"
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
},
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
},
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
},
{
  "name":"clj_commons.byte_streams.ByteBufferInputStream"
},
{
  "name":"clj_commons.byte_streams.InputStream"
},
{
  "name":"clj_commons.byte_streams.InputStream$Streamable"
},
{
  "name":"clj_commons.byte_streams.Utils"
},
{
  "name":"clj_commons.byte_streams.char_sequence__init"
},
{
  "name":"clj_commons.byte_streams.graph.Conversion"
},
{
  "name":"clj_commons.byte_streams.graph.ConversionGraph"
},
{
  "name":"clj_commons.byte_streams.graph.ConversionPath"
},
{
  "name":"clj_commons.byte_streams.graph.IConversionGraph"
},
{
  "name":"clj_commons.byte_streams.graph.Type"
},
{
  "name":"clj_commons.byte_streams.graph__init"
},
{
  "name":"clj_commons.byte_streams.protocols$fn__18213",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clj_commons.byte_streams.protocols.ByteSink"
},
{
  "name":"clj_commons.byte_streams.protocols.ByteSource"
},
{
  "name":"clj_commons.byte_streams.protocols.Closeable"
},
{
  "name":"clj_commons.byte_streams.protocols__init"
},
{
  "name":"clj_commons.byte_streams.pushback_stream.Consumption"
},
{
  "name":"clj_commons.byte_streams.pushback_stream.PushbackByteStream"
},
{
  "name":"clj_commons.byte_streams.pushback_stream.PushbackStream"
},
{
  "name":"clj_commons.byte_streams.pushback_stream.SynchronizedPushbackByteStream"
},
{
  "name":"clj_commons.byte_streams.pushback_stream__init"
},
{
  "name":"clj_commons.byte_streams.utils__init"
},
{
  "name":"clj_commons.byte_streams__init"
},
{
  "name":"clj_commons.primitive_math.Primitives"
},
{
  "name":"clj_commons.primitive_math__init"
},
{
  "name":"clj_tuple__init"
},
{
  "name":"clojure.asm.ClassReader"
},
{
  "name":"clojure.asm.ClassVisitor"
},
{
  "name":"clojure.asm.ClassWriter"
},
{
  "name":"clojure.asm.Opcodes"
},
{
  "name":"clojure.asm.Type"
},
{
  "name":"clojure.asm.commons.GeneratorAdapter"
},
{
  "name":"clojure.asm.commons.Method"
},
{
  "name":"clojure.core.ArrayChunk"
},
{
  "name":"clojure.core.ArrayManager"
},
{
  "name":"clojure.core.Eduction"
},
{
  "name":"clojure.core.IVecImpl"
},
{
  "name":"clojure.core.Inst"
},
{
  "name":"clojure.core.Vec"
},
{
  "name":"clojure.core.VecNode"
},
{
  "name":"clojure.core.VecSeq"
},
{
  "name":"clojure.core.async.Mix"
},
{
  "name":"clojure.core.async.Mult"
},
{
  "name":"clojure.core.async.Mux"
},
{
  "name":"clojure.core.async.Pub"
},
{
  "name":"clojure.core.async.impl.buffers.DroppingBuffer"
},
{
  "name":"clojure.core.async.impl.buffers.FixedBuffer"
},
{
  "name":"clojure.core.async.impl.buffers.PromiseBuffer"
},
{
  "name":"clojure.core.async.impl.buffers.SlidingBuffer"
},
{
  "name":"clojure.core.async.impl.buffers__init"
},
{
  "name":"clojure.core.async.impl.channels.MMC"
},
{
  "name":"clojure.core.async.impl.channels.ManyToManyChannel"
},
{
  "name":"clojure.core.async.impl.channels__init"
},
{
  "name":"clojure.core.async.impl.concurrent__init"
},
{
  "name":"clojure.core.async.impl.dispatch__init"
},
{
  "name":"clojure.core.async.impl.exec.threadpool__init"
},
{
  "name":"clojure.core.async.impl.ioc_macros.Call"
},
{
  "name":"clojure.core.async.impl.ioc_macros.Case"
},
{
  "name":"clojure.core.async.impl.ioc_macros.CatchHandler"
},
{
  "name":"clojure.core.async.impl.ioc_macros.CondBr"
},
{
  "name":"clojure.core.async.impl.ioc_macros.Const"
},
{
  "name":"clojure.core.async.impl.ioc_macros.CustomTerminator"
},
{
  "name":"clojure.core.async.impl.ioc_macros.Dot"
},
{
  "name":"clojure.core.async.impl.ioc_macros.EndFinally"
},
{
  "name":"clojure.core.async.impl.ioc_macros.Fn"
},
{
  "name":"clojure.core.async.impl.ioc_macros.IEmittableInstruction"
},
{
  "name":"clojure.core.async.impl.ioc_macros.IInstruction"
},
{
  "name":"clojure.core.async.impl.ioc_macros.ITerminator"
},
{
  "name":"clojure.core.async.impl.ioc_macros.InstanceInterop"
},
{
  "name":"clojure.core.async.impl.ioc_macros.Jmp"
},
{
  "name":"clojure.core.async.impl.ioc_macros.PopTry"
},
{
  "name":"clojure.core.async.impl.ioc_macros.PushTry"
},
{
  "name":"clojure.core.async.impl.ioc_macros.RawCode"
},
{
  "name":"clojure.core.async.impl.ioc_macros.Recur"
},
{
  "name":"clojure.core.async.impl.ioc_macros.Return"
},
{
  "name":"clojure.core.async.impl.ioc_macros.StaticCall"
},
{
  "name":"clojure.core.async.impl.ioc_macros__init"
},
{
  "name":"clojure.core.async.impl.mutex__init"
},
{
  "name":"clojure.core.async.impl.protocols.Buffer"
},
{
  "name":"clojure.core.async.impl.protocols.Channel"
},
{
  "name":"clojure.core.async.impl.protocols.Executor"
},
{
  "name":"clojure.core.async.impl.protocols.Handler"
},
{
  "name":"clojure.core.async.impl.protocols.ReadPort"
},
{
  "name":"clojure.core.async.impl.protocols.UnblockingBuffer"
},
{
  "name":"clojure.core.async.impl.protocols.WritePort"
},
{
  "name":"clojure.core.async.impl.protocols__init"
},
{
  "name":"clojure.core.async.impl.timers.TimeoutQueueEntry"
},
{
  "name":"clojure.core.async.impl.timers__init"
},
{
  "name":"clojure.core.async__init"
},
{
  "name":"clojure.core.cache.BasicCache"
},
{
  "name":"clojure.core.cache.CacheProtocol"
},
{
  "name":"clojure.core.cache.FIFOCache"
},
{
  "name":"clojure.core.cache.FnCache"
},
{
  "name":"clojure.core.cache.LIRSCache"
},
{
  "name":"clojure.core.cache.LRUCache"
},
{
  "name":"clojure.core.cache.LUCache"
},
{
  "name":"clojure.core.cache.SoftCache"
},
{
  "name":"clojure.core.cache.TTLCacheQ"
},
{
  "name":"clojure.core.cache__init"
},
{
  "name":"clojure.core.memoize.PluggableMemoization"
},
{
  "name":"clojure.core.memoize.RetryingDelay"
},
{
  "name":"clojure.core.memoize__init"
},
{
  "name":"clojure.core.protocols.CollReduce"
},
{
  "name":"clojure.core.protocols.Datafiable"
},
{
  "name":"clojure.core.protocols.IKVReduce"
},
{
  "name":"clojure.core.protocols.InternalReduce"
},
{
  "name":"clojure.core.protocols.Navigable"
},
{
  "name":"clojure.core.protocols__init"
},
{
  "name":"clojure.core.reducers.Cat"
},
{
  "name":"clojure.core.reducers.CollFold"
},
{
  "name":"clojure.core.reducers__init"
},
{
  "name":"clojure.core.server__init"
},
{
  "name":"clojure.core.specs.alpha$eval132",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$eval134",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$eval3",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$eval5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$eval9",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$even_number_of_forms_QMARK_",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__102",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__104",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__107",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__110",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__112",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__115",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__117",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__119",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__14",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__17",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__20",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__23",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__26",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__28",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__31",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__33",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__36",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__39",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__42",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__46",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__49",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__52",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__54",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__56",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__69",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__71",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__83",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__96",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$fn__99",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core.specs.alpha$quotable",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core__init"
},
{
  "name":"clojure.core_deftype__init"
},
{
  "name":"clojure.core_print__init"
},
{
  "name":"clojure.core_proxy__init"
},
{
  "name":"clojure.data.priority_map.PersistentPriorityMap"
},
{
  "name":"clojure.data.priority_map__init"
},
{
  "name":"clojure.datafy__init"
},
{
  "name":"clojure.edn__init"
},
{
  "name":"clojure.genclass__init"
},
{
  "name":"clojure.gvec__init"
},
{
  "name":"clojure.instant__init"
},
{
  "name":"clojure.java.data__init"
},
{
  "name":"clojure.java.io.Coercions"
},
{
  "name":"clojure.java.io.IOFactory"
},
{
  "name":"clojure.java.io__init"
},
{
  "name":"clojure.java.jdbc.Connectable"
},
{
  "name":"clojure.java.jdbc.IResultSetReadColumn"
},
{
  "name":"clojure.java.jdbc.ISQLParameter"
},
{
  "name":"clojure.java.jdbc.ISQLValue"
},
{
  "name":"clojure.java.jdbc__init"
},
{
  "name":"clojure.lang.AFn",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.AFunction"
},
{
  "name":"clojure.lang.APersistentMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.APersistentMap$KeySeq"
},
{
  "name":"clojure.lang.APersistentMap$ValSeq"
},
{
  "name":"clojure.lang.APersistentVector"
},
{
  "name":"clojure.lang.ASeq"
},
{
  "name":"clojure.lang.Associative",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.BigInt"
},
{
  "name":"clojure.lang.ChunkBuffer"
},
{
  "name":"clojure.lang.Compiler",
  "allPublicFields":true
},
{
  "name":"clojure.lang.Compiler$CompilerException"
},
{
  "name":"clojure.lang.Compiler$ObjExpr"
},
{
  "name":"clojure.lang.Compiler$ObjMethod"
},
{
  "name":"clojure.lang.Cons"
},
{
  "name":"clojure.lang.Counted",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.DynamicClassLoader"
},
{
  "name":"clojure.lang.ExceptionInfo"
},
{
  "name":"clojure.lang.Fn"
},
{
  "name":"clojure.lang.IBlockingDeref"
},
{
  "name":"clojure.lang.IChunk"
},
{
  "name":"clojure.lang.IChunkedSeq"
},
{
  "name":"clojure.lang.IDeref"
},
{
  "name":"clojure.lang.IEditableCollection",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.IExceptionInfo"
},
{
  "name":"clojure.lang.IFn",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.IHashEq",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.IKVReduce",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.ILookup",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.IMapIterable",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.IMeta",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.IObj",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"clojure.lang.IPending"
},
{
  "name":"clojure.lang.IPersistentCollection",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.IPersistentList"
},
{
  "name":"clojure.lang.IPersistentMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.IPersistentSet"
},
{
  "name":"clojure.lang.IPersistentVector"
},
{
  "name":"clojure.lang.IProxy"
},
{
  "name":"clojure.lang.IRecord"
},
{
  "name":"clojure.lang.IReduceInit"
},
{
  "name":"clojure.lang.IRef"
},
{
  "name":"clojure.lang.IReference"
},
{
  "name":"clojure.lang.ISeq"
},
{
  "name":"clojure.lang.IType"
},
{
  "name":"clojure.lang.Keyword"
},
{
  "name":"clojure.lang.LazilyPersistentVector"
},
{
  "name":"clojure.lang.LazySeq"
},
{
  "name":"clojure.lang.LineNumberingPushbackReader"
},
{
  "name":"clojure.lang.LispReader$ReaderException"
},
{
  "name":"clojure.lang.LockingTransaction",
  "queryAllPublicMethods":true
},
{
  "name":"clojure.lang.MapEntry"
},
{
  "name":"clojure.lang.MapEquivalence",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.Murmur3"
},
{
  "name":"clojure.lang.Namespace",
  "queryAllPublicMethods":true
},
{
  "name":"clojure.lang.Numbers"
},
{
  "name":"clojure.lang.PersistentArrayMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"create","parameterTypes":["java.util.Map"] }]
},
{
  "name":"clojure.lang.PersistentArrayMap$Seq"
},
{
  "name":"clojure.lang.PersistentHashMap"
},
{
  "name":"clojure.lang.PersistentHashMap$NodeSeq"
},
{
  "name":"clojure.lang.PersistentHashSet"
},
{
  "name":"clojure.lang.PersistentQueue"
},
{
  "name":"clojure.lang.PersistentTreeMap"
},
{
  "name":"clojure.lang.PersistentUnrolledMap"
},
{
  "name":"clojure.lang.PersistentUnrolledVector"
},
{
  "name":"clojure.lang.PersistentVector"
},
{
  "name":"clojure.lang.PersistentVector$ChunkedSeq"
},
{
  "name":"clojure.lang.RT",
  "queryAllPublicMethods":true
},
{
  "name":"clojure.lang.Ratio"
},
{
  "name":"clojure.lang.ReaderConditional"
},
{
  "name":"clojure.lang.Reflector"
},
{
  "name":"clojure.lang.SeqIterator"
},
{
  "name":"clojure.lang.Seqable",
  "queryAllDeclaredMethods":true
},
{
  "name":"clojure.lang.Sequential"
},
{
  "name":"clojure.lang.StringSeq"
},
{
  "name":"clojure.lang.Symbol",
  "queryAllPublicMethods":true
},
{
  "name":"clojure.lang.TaggedLiteral"
},
{
  "name":"clojure.lang.Util"
},
{
  "name":"clojure.lang.Var",
  "queryAllPublicMethods":true
},
{
  "name":"clojure.lang.Volatile"
},
{
  "name":"clojure.main__init"
},
{
  "name":"clojure.pprint.PrettyFlush"
},
{
  "name":"clojure.pprint.cl_format__init"
},
{
  "name":"clojure.pprint.column_writer__init"
},
{
  "name":"clojure.pprint.dispatch__init"
},
{
  "name":"clojure.pprint.pprint_base__init"
},
{
  "name":"clojure.pprint.pretty_writer__init"
},
{
  "name":"clojure.pprint.print_table__init"
},
{
  "name":"clojure.pprint.utilities__init"
},
{
  "name":"clojure.pprint__init"
},
{
  "name":"clojure.reflect.AsmReflector"
},
{
  "name":"clojure.reflect.ClassResolver"
},
{
  "name":"clojure.reflect.Constructor"
},
{
  "name":"clojure.reflect.Field"
},
{
  "name":"clojure.reflect.JavaReflector"
},
{
  "name":"clojure.reflect.Method"
},
{
  "name":"clojure.reflect.Reflector"
},
{
  "name":"clojure.reflect.TypeReference"
},
{
  "name":"clojure.reflect.java__init"
},
{
  "name":"clojure.reflect__init"
},
{
  "name":"clojure.set__init"
},
{
  "name":"clojure.spec.alpha.Spec"
},
{
  "name":"clojure.spec.alpha.Specize"
},
{
  "name":"clojure.spec.alpha__init"
},
{
  "name":"clojure.spec.gen.alpha__init"
},
{
  "name":"clojure.string__init"
},
{
  "name":"clojure.tools.analyzer.ast__init"
},
{
  "name":"clojure.tools.analyzer.env__init"
},
{
  "name":"clojure.tools.analyzer.jvm.ExceptionThrown"
},
{
  "name":"clojure.tools.analyzer.jvm.utils__init"
},
{
  "name":"clojure.tools.analyzer.jvm__init"
},
{
  "name":"clojure.tools.analyzer.passes.add_binding_atom__init"
},
{
  "name":"clojure.tools.analyzer.passes.cleanup__init"
},
{
  "name":"clojure.tools.analyzer.passes.constant_lifter__init"
},
{
  "name":"clojure.tools.analyzer.passes.elide_meta__init"
},
{
  "name":"clojure.tools.analyzer.passes.emit_form__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.analyze_host_expr__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.annotate_host_info__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.annotate_loops__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.annotate_tag__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.box__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.classify_invoke__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.constant_lifter__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.emit_form__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.fix_case_test__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.infer_tag__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.validate__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.validate_loop_locals__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.validate_recur__init"
},
{
  "name":"clojure.tools.analyzer.passes.jvm.warn_on_reflection__init"
},
{
  "name":"clojure.tools.analyzer.passes.source_info__init"
},
{
  "name":"clojure.tools.analyzer.passes.trim__init"
},
{
  "name":"clojure.tools.analyzer.passes.uniquify__init"
},
{
  "name":"clojure.tools.analyzer.passes.warn_earmuff__init"
},
{
  "name":"clojure.tools.analyzer.passes__init"
},
{
  "name":"clojure.tools.analyzer.utils__init"
},
{
  "name":"clojure.tools.analyzer__init"
},
{
  "name":"clojure.tools.logging$eval1",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.tools.logging$eval136",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.tools.logging.impl.Logger"
},
{
  "name":"clojure.tools.logging.impl.LoggerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"clojure.tools.logging.impl__init"
},
{
  "name":"clojure.tools.logging__init"
},
{
  "name":"clojure.tools.reader.default_data_readers__init"
},
{
  "name":"clojure.tools.reader.edn__init"
},
{
  "name":"clojure.tools.reader.impl.commons__init"
},
{
  "name":"clojure.tools.reader.impl.errors__init"
},
{
  "name":"clojure.tools.reader.impl.inspect__init"
},
{
  "name":"clojure.tools.reader.impl.utils__init"
},
{
  "name":"clojure.tools.reader.reader_types.IPushbackReader"
},
{
  "name":"clojure.tools.reader.reader_types.IndexingPushbackReader"
},
{
  "name":"clojure.tools.reader.reader_types.IndexingReader"
},
{
  "name":"clojure.tools.reader.reader_types.InputStreamReader"
},
{
  "name":"clojure.tools.reader.reader_types.PushbackReader"
},
{
  "name":"clojure.tools.reader.reader_types.PushbackReaderCoercer"
},
{
  "name":"clojure.tools.reader.reader_types.Reader"
},
{
  "name":"clojure.tools.reader.reader_types.ReaderCoercer"
},
{
  "name":"clojure.tools.reader.reader_types.SourceLoggingPushbackReader"
},
{
  "name":"clojure.tools.reader.reader_types.StringReader"
},
{
  "name":"clojure.tools.reader.reader_types__init"
},
{
  "name":"clojure.tools.reader__init"
},
{
  "name":"clojure.uuid__init"
},
{
  "name":"clojure.walk__init"
},
{
  "name":"com.fasterxml.jackson.core.JsonFactory"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator$Feature"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationFeature"
},
{
  "name":"com.fasterxml.jackson.databind.JsonSerializer"
},
{
  "name":"com.fasterxml.jackson.databind.Module"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper"
},
{
  "name":"com.fasterxml.jackson.databind.SerializationFeature"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule"
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.HikariConfig",
  "allDeclaredFields":true
},
{
  "name":"com.zaxxer.hikari.HikariDataSource"
},
{
  "name":"config.core__init"
},
{
  "name":"hikari_cp.core__init"
},
{
  "name":"hugsql.adapter.HugsqlAdapter"
},
{
  "name":"hugsql.adapter.next_jdbc.HugsqlAdapterNextJdbc"
},
{
  "name":"hugsql.adapter.next_jdbc__init"
},
{
  "name":"hugsql.adapter__init"
},
{
  "name":"hugsql.core$eval154",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"hugsql.core__init"
},
{
  "name":"hugsql.expr_run__init"
},
{
  "name":"hugsql.parameters.IdentifierParam"
},
{
  "name":"hugsql.parameters.IdentifierParamList"
},
{
  "name":"hugsql.parameters.SQLParam"
},
{
  "name":"hugsql.parameters.SQLVecParam"
},
{
  "name":"hugsql.parameters.SQLVecParamList"
},
{
  "name":"hugsql.parameters.TupleParam"
},
{
  "name":"hugsql.parameters.TupleParamList"
},
{
  "name":"hugsql.parameters.ValueParam"
},
{
  "name":"hugsql.parameters.ValueParamList"
},
{
  "name":"hugsql.parameters__init"
},
{
  "name":"hugsql.parser__init"
},
{
  "name":"integrant.core.Ref"
},
{
  "name":"integrant.core.RefLike"
},
{
  "name":"integrant.core.RefSet"
},
{
  "name":"integrant.core__init"
},
{
  "name":"io.aleph.dirigiste.Executor"
},
{
  "name":"io.aleph.dirigiste.Executor$Controller"
},
{
  "name":"io.aleph.dirigiste.Executors"
},
{
  "name":"io.aleph.dirigiste.IPool"
},
{
  "name":"io.aleph.dirigiste.IPool$AcquireCallback"
},
{
  "name":"io.aleph.dirigiste.IPool$Controller"
},
{
  "name":"io.aleph.dirigiste.IPool$Generator"
},
{
  "name":"io.aleph.dirigiste.Pool"
},
{
  "name":"io.aleph.dirigiste.Pools"
},
{
  "name":"io.aleph.dirigiste.Stats"
},
{
  "name":"io.aleph.dirigiste.Stats$Metric"
},
{
  "name":"io.netty.bootstrap.Bootstrap"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap"
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.buffer.ByteBuf"
},
{
  "name":"io.netty.buffer.ByteBufHolder"
},
{
  "name":"io.netty.buffer.Unpooled"
},
{
  "name":"io.netty.channel.Channel"
},
{
  "name":"io.netty.channel.ChannelFuture"
},
{
  "name":"io.netty.channel.ChannelFutureListener"
},
{
  "name":"io.netty.channel.ChannelHandler"
},
{
  "name":"io.netty.channel.ChannelHandlerContext"
},
{
  "name":"io.netty.channel.ChannelInboundHandler"
},
{
  "name":"io.netty.channel.ChannelInitializer"
},
{
  "name":"io.netty.channel.ChannelOption"
},
{
  "name":"io.netty.channel.ChannelOutboundHandler"
},
{
  "name":"io.netty.channel.ChannelPipeline"
},
{
  "name":"io.netty.channel.DefaultFileRegion"
},
{
  "name":"io.netty.channel.EventLoopGroup"
},
{
  "name":"io.netty.channel.FileRegion"
},
{
  "name":"io.netty.channel.epoll.Epoll"
},
{
  "name":"io.netty.channel.epoll.EpollDatagramChannel"
},
{
  "name":"io.netty.channel.epoll.EpollEventLoopGroup"
},
{
  "name":"io.netty.channel.epoll.EpollServerSocketChannel"
},
{
  "name":"io.netty.channel.epoll.EpollSocketChannel"
},
{
  "name":"io.netty.channel.group.ChannelGroup"
},
{
  "name":"io.netty.channel.group.DefaultChannelGroup"
},
{
  "name":"io.netty.channel.nio.NioEventLoopGroup"
},
{
  "name":"io.netty.channel.socket.ServerSocketChannel"
},
{
  "name":"io.netty.channel.socket.nio.NioDatagramChannel"
},
{
  "name":"io.netty.channel.socket.nio.NioServerSocketChannel"
},
{
  "name":"io.netty.channel.socket.nio.NioSocketChannel"
},
{
  "name":"io.netty.handler.codec.DecoderException"
},
{
  "name":"io.netty.handler.codec.TooLongFrameException"
},
{
  "name":"io.netty.handler.codec.http.DefaultFullHttpRequest"
},
{
  "name":"io.netty.handler.codec.http.DefaultFullHttpResponse"
},
{
  "name":"io.netty.handler.codec.http.DefaultHttpContent"
},
{
  "name":"io.netty.handler.codec.http.DefaultHttpHeaders"
},
{
  "name":"io.netty.handler.codec.http.DefaultHttpRequest"
},
{
  "name":"io.netty.handler.codec.http.DefaultHttpResponse"
},
{
  "name":"io.netty.handler.codec.http.DefaultLastHttpContent"
},
{
  "name":"io.netty.handler.codec.http.FullHttpRequest"
},
{
  "name":"io.netty.handler.codec.http.HttpChunkedInput"
},
{
  "name":"io.netty.handler.codec.http.HttpContent"
},
{
  "name":"io.netty.handler.codec.http.HttpContentCompressor"
},
{
  "name":"io.netty.handler.codec.http.HttpHeaderNames"
},
{
  "name":"io.netty.handler.codec.http.HttpHeaders"
},
{
  "name":"io.netty.handler.codec.http.HttpMessage"
},
{
  "name":"io.netty.handler.codec.http.HttpMethod"
},
{
  "name":"io.netty.handler.codec.http.HttpRequest"
},
{
  "name":"io.netty.handler.codec.http.HttpResponse"
},
{
  "name":"io.netty.handler.codec.http.HttpResponseStatus"
},
{
  "name":"io.netty.handler.codec.http.HttpServerCodec"
},
{
  "name":"io.netty.handler.codec.http.HttpServerExpectContinueHandler"
},
{
  "name":"io.netty.handler.codec.http.HttpUtil"
},
{
  "name":"io.netty.handler.codec.http.HttpVersion"
},
{
  "name":"io.netty.handler.codec.http.LastHttpContent"
},
{
  "name":"io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame"
},
{
  "name":"io.netty.handler.codec.http.websocketx.CloseWebSocketFrame"
},
{
  "name":"io.netty.handler.codec.http.websocketx.PingWebSocketFrame"
},
{
  "name":"io.netty.handler.codec.http.websocketx.PongWebSocketFrame"
},
{
  "name":"io.netty.handler.codec.http.websocketx.TextWebSocketFrame"
},
{
  "name":"io.netty.handler.codec.http.websocketx.WebSocketChunkedInput"
},
{
  "name":"io.netty.handler.codec.http.websocketx.WebSocketFrame"
},
{
  "name":"io.netty.handler.codec.http.websocketx.WebSocketFrameAggregator"
},
{
  "name":"io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker"
},
{
  "name":"io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory"
},
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler"
},
{
  "name":"io.netty.handler.logging.LogLevel"
},
{
  "name":"io.netty.handler.logging.LoggingHandler"
},
{
  "name":"io.netty.handler.ssl.ClientAuth"
},
{
  "name":"io.netty.handler.ssl.SslContext"
},
{
  "name":"io.netty.handler.ssl.SslContextBuilder"
},
{
  "name":"io.netty.handler.ssl.SslHandler"
},
{
  "name":"io.netty.handler.ssl.SslProvider"
},
{
  "name":"io.netty.handler.ssl.util.InsecureTrustManagerFactory"
},
{
  "name":"io.netty.handler.ssl.util.SelfSignedCertificate"
},
{
  "name":"io.netty.handler.stream.ChunkedFile"
},
{
  "name":"io.netty.handler.stream.ChunkedInput"
},
{
  "name":"io.netty.handler.stream.ChunkedWriteHandler"
},
{
  "name":"io.netty.handler.timeout.IdleState"
},
{
  "name":"io.netty.handler.timeout.IdleStateEvent"
},
{
  "name":"io.netty.handler.timeout.IdleStateHandler"
},
{
  "name":"io.netty.resolver.AddressResolverGroup"
},
{
  "name":"io.netty.resolver.NoopAddressResolverGroup"
},
{
  "name":"io.netty.resolver.ResolvedAddressTypes"
},
{
  "name":"io.netty.resolver.dns.DnsAddressResolverGroup"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolverBuilder"
},
{
  "name":"io.netty.resolver.dns.DnsServerAddressStreamProvider"
},
{
  "name":"io.netty.resolver.dns.SequentialDnsServerAddressStreamProvider"
},
{
  "name":"io.netty.resolver.dns.SingletonDnsServerAddressStreamProvider"
},
{
  "name":"io.netty.util.Attribute"
},
{
  "name":"io.netty.util.AttributeKey"
},
{
  "name":"io.netty.util.ResourceLeakDetector"
},
{
  "name":"io.netty.util.ResourceLeakDetector$Level"
},
{
  "name":"io.netty.util.concurrent.AbstractEventExecutor"
},
{
  "name":"io.netty.util.concurrent.FastThreadLocal"
},
{
  "name":"io.netty.util.concurrent.FastThreadLocalThread"
},
{
  "name":"io.netty.util.concurrent.Future"
},
{
  "name":"io.netty.util.concurrent.GenericFutureListener"
},
{
  "name":"io.netty.util.concurrent.GlobalEventExecutor"
},
{
  "name":"io.netty.util.internal.SystemPropertyUtil"
},
{
  "name":"io.netty.util.internal.logging.InternalLoggerFactory"
},
{
  "name":"io.netty.util.internal.logging.JdkLoggerFactory"
},
{
  "name":"io.netty.util.internal.logging.Log4J2LoggerFactory"
},
{
  "name":"io.netty.util.internal.logging.Log4JLoggerFactory"
},
{
  "name":"io.netty.util.internal.logging.Slf4JLoggerFactory"
},
{
  "name":"io.undertow.Undertow"
},
{
  "name":"io.undertow.Undertow$Builder"
},
{
  "name":"io.undertow.UndertowOptions"
},
{
  "name":"io.undertow.server.HttpHandler"
},
{
  "name":"io.undertow.server.HttpServerExchange"
},
{
  "name":"io.undertow.server.handlers.BlockingHandler"
},
{
  "name":"io.undertow.server.session.InMemorySessionManager"
},
{
  "name":"io.undertow.server.session.SessionAttachmentHandler"
},
{
  "name":"io.undertow.server.session.SessionCookieConfig"
},
{
  "name":"io.undertow.server.session.SessionManager"
},
{
  "name":"io.undertow.util.HeaderMap"
},
{
  "name":"io.undertow.util.HeaderValues"
},
{
  "name":"io.undertow.util.Headers"
},
{
  "name":"io.undertow.util.HttpString"
},
{
  "name":"io.undertow.websockets.WebSocketConnectionCallback"
},
{
  "name":"io.undertow.websockets.WebSocketProtocolHandshakeHandler"
},
{
  "name":"io.undertow.websockets.core.AbstractReceiveListener"
},
{
  "name":"io.undertow.websockets.core.BufferedBinaryMessage"
},
{
  "name":"io.undertow.websockets.core.BufferedTextMessage"
},
{
  "name":"io.undertow.websockets.core.CloseMessage"
},
{
  "name":"io.undertow.websockets.core.WebSocketCallback"
},
{
  "name":"io.undertow.websockets.core.WebSocketChannel"
},
{
  "name":"io.undertow.websockets.core.WebSockets"
},
{
  "name":"io.undertow.websockets.spi.WebSocketHttpExchange"
},
{
  "name":"java.io.BufferedInputStream"
},
{
  "name":"java.io.BufferedOutputStream"
},
{
  "name":"java.io.BufferedReader"
},
{
  "name":"java.io.BufferedWriter"
},
{
  "name":"java.io.ByteArrayInputStream"
},
{
  "name":"java.io.ByteArrayOutputStream"
},
{
  "name":"java.io.CharArrayReader"
},
{
  "name":"java.io.Closeable"
},
{
  "name":"java.io.DataInputStream"
},
{
  "name":"java.io.DataOutput"
},
{
  "name":"java.io.File"
},
{
  "name":"java.io.FileInputStream"
},
{
  "name":"java.io.FileOutputStream"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.FileWriter"
},
{
  "name":"java.io.IOException"
},
{
  "name":"java.io.InputStream"
},
{
  "name":"java.io.InputStreamReader"
},
{
  "name":"java.io.NotSerializableException"
},
{
  "name":"java.io.OutputStream"
},
{
  "name":"java.io.OutputStreamWriter"
},
{
  "name":"java.io.PipedInputStream"
},
{
  "name":"java.io.PipedOutputStream"
},
{
  "name":"java.io.PrintWriter"
},
{
  "name":"java.io.PushbackReader"
},
{
  "name":"java.io.RandomAccessFile"
},
{
  "name":"java.io.Reader"
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.io.StringReader"
},
{
  "name":"java.io.StringWriter"
},
{
  "name":"java.io.Writer"
},
{
  "name":"java.lang.Boolean"
},
{
  "name":"java.lang.Byte"
},
{
  "name":"java.lang.CharSequence"
},
{
  "name":"java.lang.Character"
},
{
  "name":"java.lang.Class",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getModule","parameterTypes":[] }]
},
{
  "name":"java.lang.ClassLoader"
},
{
  "name":"java.lang.Double"
},
{
  "name":"java.lang.Enum"
},
{
  "name":"java.lang.Exception"
},
{
  "name":"java.lang.Float"
},
{
  "name":"java.lang.IllegalArgumentException",
  "queryAllPublicConstructors":true
},
{
  "name":"java.lang.Integer"
},
{
  "name":"java.lang.Iterable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Long"
},
{
  "name":"java.lang.Module",
  "methods":[{"name":"getDescriptor","parameterTypes":[] }]
},
{
  "name":"java.lang.Number"
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Runnable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.Short"
},
{
  "name":"java.lang.StackTraceElement"
},
{
  "name":"java.lang.String"
},
{
  "name":"java.lang.Thread"
},
{
  "name":"java.lang.ThreadLocal"
},
{
  "name":"java.lang.Throwable"
},
{
  "name":"java.lang.UnsupportedOperationException"
},
{
  "name":"java.lang.Void"
},
{
  "name":"java.lang.annotation.Annotation"
},
{
  "name":"java.lang.annotation.Retention"
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.ref.ReferenceQueue"
},
{
  "name":"java.lang.ref.SoftReference"
},
{
  "name":"java.lang.ref.WeakReference"
},
{
  "name":"java.lang.reflect.Array"
},
{
  "name":"java.lang.reflect.Constructor"
},
{
  "name":"java.lang.reflect.Field"
},
{
  "name":"java.lang.reflect.Method",
  "methods":[{"name":"canAccess","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"java.lang.reflect.Modifier"
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.InetAddress"
},
{
  "name":"java.net.InetSocketAddress"
},
{
  "name":"java.net.MalformedURLException"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.ServerSocket"
},
{
  "name":"java.net.Socket"
},
{
  "name":"java.net.SocketAddress"
},
{
  "name":"java.net.SocketException"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URI"
},
{
  "name":"java.net.URL"
},
{
  "name":"java.net.URLDecoder"
},
{
  "name":"java.net.URLEncoder"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.CharBuffer"
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.Channels"
},
{
  "name":"java.nio.channels.ClosedChannelException"
},
{
  "name":"java.nio.channels.FileChannel"
},
{
  "name":"java.nio.channels.FileChannel$MapMode"
},
{
  "name":"java.nio.channels.Pipe"
},
{
  "name":"java.nio.channels.ReadableByteChannel"
},
{
  "name":"java.nio.channels.WritableByteChannel"
},
{
  "name":"java.nio.channels.spi.AbstractSelectableChannel"
},
{
  "name":"java.nio.channels.spi.SelectorProvider",
  "methods":[
    {"name":"openServerSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }, 
    {"name":"openSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }
  ]
},
{
  "name":"java.nio.charset.Charset"
},
{
  "name":"java.nio.charset.CharsetDecoder"
},
{
  "name":"java.nio.charset.CoderResult"
},
{
  "name":"java.nio.charset.CodingErrorAction"
},
{
  "name":"java.nio.file.Files"
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.nio.file.StandardOpenOption"
},
{
  "name":"java.nio.file.attribute.FileAttribute"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.KeyStore"
},
{
  "name":"java.security.MessageDigest"
},
{
  "name":"java.security.PrivateKey"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.cert.X509Certificate"
},
{
  "name":"java.sql.BatchUpdateException"
},
{
  "name":"java.sql.Clob"
},
{
  "name":"java.sql.Connection"
},
{
  "name":"java.sql.DriverManager"
},
{
  "name":"java.sql.PreparedStatement"
},
{
  "name":"java.sql.ResultSet"
},
{
  "name":"java.sql.ResultSetMetaData"
},
{
  "name":"java.sql.SQLException"
},
{
  "name":"java.sql.Statement"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.sql.Types"
},
{
  "name":"java.text.DateFormat"
},
{
  "name":"java.text.ParseException"
},
{
  "name":"java.text.SimpleDateFormat"
},
{
  "name":"java.time.Instant"
},
{
  "name":"java.time.ZoneId"
},
{
  "name":"java.time.format.DateTimeFormatter"
},
{
  "name":"java.time.format.DateTimeFormatterBuilder"
},
{
  "name":"java.time.temporal.ChronoField"
},
{
  "name":"java.util.ArrayDeque"
},
{
  "name":"java.util.ArrayList"
},
{
  "name":"java.util.Base64"
},
{
  "name":"java.util.Calendar"
},
{
  "name":"java.util.Collection"
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.EnumSet"
},
{
  "name":"java.util.GregorianCalendar"
},
{
  "name":"java.util.HashMap"
},
{
  "name":"java.util.Hashtable"
},
{
  "name":"java.util.Iterator"
},
{
  "name":"java.util.LinkedList"
},
{
  "name":"java.util.List"
},
{
  "name":"java.util.Locale"
},
{
  "name":"java.util.Map",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.PriorityQueue"
},
{
  "name":"java.util.Properties"
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.Queue"
},
{
  "name":"java.util.RandomAccess"
},
{
  "name":"java.util.Set"
},
{
  "name":"java.util.StringTokenizer"
},
{
  "name":"java.util.TimeZone"
},
{
  "name":"java.util.UUID"
},
{
  "name":"java.util.concurrent.ArrayBlockingQueue"
},
{
  "name":"java.util.concurrent.BlockingQueue"
},
{
  "name":"java.util.concurrent.Callable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.CancellationException"
},
{
  "name":"java.util.concurrent.CompletableFuture"
},
{
  "name":"java.util.concurrent.ConcurrentHashMap"
},
{
  "name":"java.util.concurrent.ConcurrentLinkedQueue"
},
{
  "name":"java.util.concurrent.ConcurrentSkipListMap"
},
{
  "name":"java.util.concurrent.CopyOnWriteArrayList"
},
{
  "name":"java.util.concurrent.CountDownLatch"
},
{
  "name":"java.util.concurrent.DelayQueue"
},
{
  "name":"java.util.concurrent.Delayed"
},
{
  "name":"java.util.concurrent.Executor"
},
{
  "name":"java.util.concurrent.ExecutorService"
},
{
  "name":"java.util.concurrent.Executors"
},
{
  "name":"java.util.concurrent.ForkJoinPool"
},
{
  "name":"java.util.concurrent.ForkJoinTask"
},
{
  "name":"java.util.concurrent.Future"
},
{
  "name":"java.util.concurrent.LinkedBlockingQueue"
},
{
  "name":"java.util.concurrent.RejectedExecutionException"
},
{
  "name":"java.util.concurrent.ScheduledExecutorService"
},
{
  "name":"java.util.concurrent.ScheduledFuture"
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor"
},
{
  "name":"java.util.concurrent.SynchronousQueue"
},
{
  "name":"java.util.concurrent.ThreadFactory"
},
{
  "name":"java.util.concurrent.ThreadLocalRandom"
},
{
  "name":"java.util.concurrent.TimeUnit"
},
{
  "name":"java.util.concurrent.TimeoutException"
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean"
},
{
  "name":"java.util.concurrent.atomic.AtomicInteger"
},
{
  "name":"java.util.concurrent.atomic.AtomicLong"
},
{
  "name":"java.util.concurrent.atomic.AtomicReference"
},
{
  "name":"java.util.concurrent.atomic.AtomicReferenceArray"
},
{
  "name":"java.util.concurrent.locks.Lock"
},
{
  "name":"java.util.concurrent.locks.ReentrantLock"
},
{
  "name":"java.util.jar.JarEntry"
},
{
  "name":"java.util.jar.JarFile"
},
{
  "name":"java.util.regex.Matcher"
},
{
  "name":"java.util.regex.Pattern"
},
{
  "name":"java.util.stream.BaseStream"
},
{
  "name":"javax.net.ssl.KeyManagerFactory"
},
{
  "name":"javax.net.ssl.SSLContext"
},
{
  "name":"javax.net.ssl.SSLHandshakeException"
},
{
  "name":"javax.net.ssl.TrustManager"
},
{
  "name":"javax.net.ssl.TrustManagerFactory"
},
{
  "name":"javax.sql.DataSource"
},
{
  "name":"javax.xml.datatype.XMLGregorianCalendar"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jsonista.core.ReadValue"
},
{
  "name":"jsonista.core.WriteValue"
},
{
  "name":"jsonista.core__init"
},
{
  "name":"jsonista.jackson.ArrayListDeserializer"
},
{
  "name":"jsonista.jackson.DateSerializer"
},
{
  "name":"jsonista.jackson.FunctionalKeyDeserializer"
},
{
  "name":"jsonista.jackson.FunctionalKeywordSerializer"
},
{
  "name":"jsonista.jackson.FunctionalSerializer"
},
{
  "name":"jsonista.jackson.HashMapDeserializer"
},
{
  "name":"jsonista.jackson.KeywordKeyDeserializer"
},
{
  "name":"jsonista.jackson.KeywordSerializer"
},
{
  "name":"jsonista.jackson.PersistentHashMapDeserializer"
},
{
  "name":"jsonista.jackson.PersistentVectorDeserializer"
},
{
  "name":"jsonista.jackson.RatioSerializer"
},
{
  "name":"jsonista.jackson.SymbolSerializer"
},
{
  "name":"manifold.debug__init"
},
{
  "name":"manifold.deferred.Deferrable"
},
{
  "name":"manifold.deferred.Deferred"
},
{
  "name":"manifold.deferred.ErrorDeferred"
},
{
  "name":"manifold.deferred.IDeferred"
},
{
  "name":"manifold.deferred.IDeferredListener"
},
{
  "name":"manifold.deferred.IMutableDeferred"
},
{
  "name":"manifold.deferred.LeakAwareDeferred"
},
{
  "name":"manifold.deferred.Listener"
},
{
  "name":"manifold.deferred.Recur"
},
{
  "name":"manifold.deferred.SuccessDeferred"
},
{
  "name":"manifold.deferred__init"
},
{
  "name":"manifold.executor__init"
},
{
  "name":"manifold.stream.BufferedStream"
},
{
  "name":"manifold.stream.Callback"
},
{
  "name":"manifold.stream.SinkProxy"
},
{
  "name":"manifold.stream.SourceProxy"
},
{
  "name":"manifold.stream.SplicedStream"
},
{
  "name":"manifold.stream.async.CoreAsyncSink"
},
{
  "name":"manifold.stream.async.CoreAsyncSource"
},
{
  "name":"manifold.stream.async__init"
},
{
  "name":"manifold.stream.core.IEventSink"
},
{
  "name":"manifold.stream.core.IEventSource"
},
{
  "name":"manifold.stream.core.IEventStream"
},
{
  "name":"manifold.stream.core.Sinkable"
},
{
  "name":"manifold.stream.core.Sourceable"
},
{
  "name":"manifold.stream.core__init"
},
{
  "name":"manifold.stream.default.Consumer"
},
{
  "name":"manifold.stream.default.Consumption"
},
{
  "name":"manifold.stream.default.Producer"
},
{
  "name":"manifold.stream.default.Production"
},
{
  "name":"manifold.stream.default.Stream"
},
{
  "name":"manifold.stream.default__init"
},
{
  "name":"manifold.stream.deferred.DeferredSink"
},
{
  "name":"manifold.stream.deferred.DeferredSource"
},
{
  "name":"manifold.stream.deferred__init"
},
{
  "name":"manifold.stream.graph.AsyncPut"
},
{
  "name":"manifold.stream.graph.Downstream"
},
{
  "name":"manifold.stream.graph__init"
},
{
  "name":"manifold.stream.iterator.IteratorSource"
},
{
  "name":"manifold.stream.iterator__init"
},
{
  "name":"manifold.stream.queue.BlockingQueueSink"
},
{
  "name":"manifold.stream.queue.BlockingQueueSource"
},
{
  "name":"manifold.stream.queue__init"
},
{
  "name":"manifold.stream.random_access.RandomAccessSource"
},
{
  "name":"manifold.stream.random_access__init"
},
{
  "name":"manifold.stream.seq.SeqSource"
},
{
  "name":"manifold.stream.seq__init"
},
{
  "name":"manifold.stream__init"
},
{
  "name":"manifold.time.IClock"
},
{
  "name":"manifold.time.IMockClock"
},
{
  "name":"manifold.time__init"
},
{
  "name":"manifold.utils__init"
},
{
  "name":"meta_merge.core__init"
},
{
  "name":"migratus.core__init"
},
{
  "name":"migratus.database.Database"
},
{
  "name":"migratus.database__init"
},
{
  "name":"migratus.migration.edn.EdnMigration"
},
{
  "name":"migratus.migration.edn__init"
},
{
  "name":"migratus.migration.sql.SqlMigration"
},
{
  "name":"migratus.migration.sql__init"
},
{
  "name":"migratus.migrations__init"
},
{
  "name":"migratus.properties__init"
},
{
  "name":"migratus.protocols.Migration"
},
{
  "name":"migratus.protocols.Store"
},
{
  "name":"migratus.protocols__init"
},
{
  "name":"migratus.utils__init"
},
{
  "name":"next.jdbc.connection__init"
},
{
  "name":"next.jdbc.default_options.DefaultOptions"
},
{
  "name":"next.jdbc.default_options__init"
},
{
  "name":"next.jdbc.prepare.SettableParameter"
},
{
  "name":"next.jdbc.prepare__init"
},
{
  "name":"next.jdbc.protocols.Connectable"
},
{
  "name":"next.jdbc.protocols.Executable"
},
{
  "name":"next.jdbc.protocols.Preparable"
},
{
  "name":"next.jdbc.protocols.Sourceable"
},
{
  "name":"next.jdbc.protocols.Transactable"
},
{
  "name":"next.jdbc.protocols__init"
},
{
  "name":"next.jdbc.result_set.ArrayResultSetBuilder"
},
{
  "name":"next.jdbc.result_set.DatafiableRow"
},
{
  "name":"next.jdbc.result_set.InspectableMapifiedResultSet"
},
{
  "name":"next.jdbc.result_set.MapResultSetBuilder"
},
{
  "name":"next.jdbc.result_set.MapifiedResultSet"
},
{
  "name":"next.jdbc.result_set.ReadableColumn"
},
{
  "name":"next.jdbc.result_set.ResultSetBuilder"
},
{
  "name":"next.jdbc.result_set.RowBuilder"
},
{
  "name":"next.jdbc.result_set__init"
},
{
  "name":"next.jdbc.sql_logging.SQLLogging"
},
{
  "name":"next.jdbc.sql_logging__init"
},
{
  "name":"next.jdbc.transaction__init"
},
{
  "name":"next.jdbc__init"
},
{
  "name":"org.httpkit.encode__init"
},
{
  "name":"org.httpkit.logger.ContextLogger"
},
{
  "name":"org.httpkit.logger.EventLogger"
},
{
  "name":"org.httpkit.logger.EventNames"
},
{
  "name":"org.httpkit.server.AsyncChannel"
},
{
  "name":"org.httpkit.server.Channel"
},
{
  "name":"org.httpkit.server.HttpServer"
},
{
  "name":"org.httpkit.server.IHttpServer"
},
{
  "name":"org.httpkit.server.ProxyProtocolOption"
},
{
  "name":"org.httpkit.server.RingHandler"
},
{
  "name":"org.httpkit.server__init"
},
{
  "name":"org.objectweb.asm.Type"
},
{
  "name":"org.postgresql.Driver"
},
{
  "name":"org.slf4j.ILoggerFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.slf4j.Logger",
  "queryAllPublicMethods":true
},
{
  "name":"org.slf4j.LoggerFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.sqlite.JDBC"
},
{
  "name":"org.tobereplaced.lettercase.internal__init"
},
{
  "name":"org.tobereplaced.lettercase.protocols.AlterName"
},
{
  "name":"org.tobereplaced.lettercase.protocols.AlterNamespace"
},
{
  "name":"org.tobereplaced.lettercase.protocols__init"
},
{
  "name":"org.tobereplaced.lettercase__init"
},
{
  "name":"org.xnio.ChannelListener"
},
{
  "name":"org.xnio.Options"
},
{
  "name":"org.xnio.SslClientAuthMode"
},
{
  "name":"potemkin.collections.PotemkinMap"
},
{
  "name":"potemkin.collections.PotemkinMeta"
},
{
  "name":"potemkin.collections__init"
},
{
  "name":"potemkin.macros__init"
},
{
  "name":"potemkin.namespaces__init"
},
{
  "name":"potemkin.types.PotemkinType"
},
{
  "name":"potemkin.types__init"
},
{
  "name":"potemkin.utils__init"
},
{
  "name":"potemkin.walk__init"
},
{
  "name":"potemkin__init"
},
{
  "name":"reitit.Trie"
},
{
  "name":"reitit.Trie$Match"
},
{
  "name":"reitit.Trie$Matcher"
},
{
  "name":"reitit.coercion.Coercion"
},
{
  "name":"reitit.coercion.CoercionError"
},
{
  "name":"reitit.coercion.ParameterCoercion"
},
{
  "name":"reitit.coercion.spec.IntoSpec"
},
{
  "name":"reitit.coercion.spec__init"
},
{
  "name":"reitit.coercion__init"
},
{
  "name":"reitit.core.Expand"
},
{
  "name":"reitit.core.Match"
},
{
  "name":"reitit.core.PartialMatch"
},
{
  "name":"reitit.core.Router"
},
{
  "name":"reitit.core__init"
},
{
  "name":"reitit.exception__init"
},
{
  "name":"reitit.impl.IntoString"
},
{
  "name":"reitit.impl__init"
},
{
  "name":"reitit.middleware.Endpoint"
},
{
  "name":"reitit.middleware.IntoMiddleware"
},
{
  "name":"reitit.middleware.Middleware"
},
{
  "name":"reitit.middleware__init"
},
{
  "name":"reitit.ring.Endpoint"
},
{
  "name":"reitit.ring.Methods"
},
{
  "name":"reitit.ring__init"
},
{
  "name":"reitit.swagger__init"
},
{
  "name":"reitit.swagger_ui__init"
},
{
  "name":"reitit.trie.CatchAll"
},
{
  "name":"reitit.trie.Match"
},
{
  "name":"reitit.trie.Matcher"
},
{
  "name":"reitit.trie.Node"
},
{
  "name":"reitit.trie.TrieCompiler"
},
{
  "name":"reitit.trie.Wild"
},
{
  "name":"reitit.trie__init"
},
{
  "name":"riddley.Util"
},
{
  "name":"riddley.compiler__init"
},
{
  "name":"riddley.walk__init"
},
{
  "name":"ring.adapter.undertow.Util"
},
{
  "name":"ring.adapter.undertow.headers__init"
},
{
  "name":"ring.adapter.undertow.request__init"
},
{
  "name":"ring.adapter.undertow.response.RespondBody"
},
{
  "name":"ring.adapter.undertow.response__init"
},
{
  "name":"ring.adapter.undertow.ssl__init"
},
{
  "name":"ring.adapter.undertow.websocket__init"
},
{
  "name":"ring.adapter.undertow__init"
},
{
  "name":"ring.middleware.keyword_params__init"
},
{
  "name":"ring.middleware.params__init"
},
{
  "name":"ring.util.codec.FormEncodeable"
},
{
  "name":"ring.util.codec__init"
},
{
  "name":"ring.util.io__init"
},
{
  "name":"ring.util.mime_type__init"
},
{
  "name":"ring.util.parsing__init"
},
{
  "name":"ring.util.request__init"
},
{
  "name":"ring.util.response__init"
},
{
  "name":"ring.util.time__init"
},
{
  "name":"spec_tools.core.Coercion"
},
{
  "name":"spec_tools.core.DynamicConforming"
},
{
  "name":"spec_tools.core.Spec"
},
{
  "name":"spec_tools.core.Transformer"
},
{
  "name":"spec_tools.core__init"
},
{
  "name":"spec_tools.data_spec.Maybe"
},
{
  "name":"spec_tools.data_spec.OptionalKey"
},
{
  "name":"spec_tools.data_spec.Or"
},
{
  "name":"spec_tools.data_spec.RequiredKey"
},
{
  "name":"spec_tools.data_spec__init"
},
{
  "name":"spec_tools.form__init"
},
{
  "name":"spec_tools.impl__init"
},
{
  "name":"spec_tools.json_schema__init"
},
{
  "name":"spec_tools.parse__init"
},
{
  "name":"spec_tools.swagger.core__init"
},
{
  "name":"spec_tools.transform__init"
},
{
  "name":"spec_tools.visitor__init"
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, 
    {"name":"storeFence","parameterTypes":[] }
  ]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"weavejester.dependency.DependencyGraph"
},
{
  "name":"weavejester.dependency.DependencyGraphUpdate"
},
{
  "name":"weavejester.dependency.MapDependencyGraph"
},
{
  "name":"weavejester.dependency__init"
}
]
